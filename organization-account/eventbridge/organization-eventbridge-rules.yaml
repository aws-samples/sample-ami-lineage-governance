AWSTemplateFormatVersion: "2010-09-09"
Description: "Organization-wide EventBridge rules for AMI lineage tracking"

Parameters:
  SecurityToolingAccountId:
    Type: String
    Description: Account ID where the AMI lineage processing Lambda functions are deployed
    AllowedPattern: "[0-9]{12}"

Resources:
  # Custom EventBridge Bus for AMI Events
  AMILineageEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: ami-lineage-events
      Description: Custom event bus for AMI lineage tracking across organization

  # Rule to capture AMI creation events
  AMICreationRule:
    Type: AWS::Events::Rule
    Properties:
      Name: ami-creation-events
      Description: Captures AMI creation events across the organization
      EventBusName: !Ref AMILineageEventBus
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - ec2.amazonaws.com
          eventName:
            - CreateImage
            - CopyImage
            - CreateRestoreImageTask
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:lambda:${AWS::Region}:${SecurityToolingAccountId}:function:ami-event-processor"
          Id: AMICreationTarget
          RoleArn: !GetAtt EventBridgeCrossAccountRole.Arn

  # Rule to capture AMI modification events
  AMIModificationRule:
    Type: AWS::Events::Rule
    Properties:
      Name: ami-modification-events
      Description: Captures AMI modification events across the organization
      EventBusName: !Ref AMILineageEventBus
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - ec2.amazonaws.com
          eventName:
            - CreateTags
            - DeleteTags
            - ModifyImageAttribute
            - ResetImageAttribute
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:lambda:${AWS::Region}:${SecurityToolingAccountId}:function:ami-event-processor"
          Id: AMIModificationTarget
          RoleArn: !GetAtt EventBridgeCrossAccountRole.Arn

  # Rule to capture AMI deregistration events
  AMIDeregistrationRule:
    Type: AWS::Events::Rule
    Properties:
      Name: ami-deregistration-events
      Description: Captures AMI deregistration events across the organization
      EventBusName: !Ref AMILineageEventBus
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - ec2.amazonaws.com
          eventName:
            - DeregisterImage
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:lambda:${AWS::Region}:${SecurityToolingAccountId}:function:ami-event-processor"
          Id: AMIDeregistrationTarget
          RoleArn: !GetAtt EventBridgeCrossAccountRole.Arn

  # Rule to capture EC2 instance launch events
  InstanceLaunchRule:
    Type: AWS::Events::Rule
    Properties:
      Name: instance-launch-events
      Description: Captures EC2 instance launch events for AMI usage tracking
      EventBusName: !Ref AMILineageEventBus
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance State-change Notification
        detail:
          state:
            - running
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:lambda:${AWS::Region}:${SecurityToolingAccountId}:function:ami-event-processor"
          Id: InstanceLaunchTarget
          RoleArn: !GetAtt EventBridgeCrossAccountRole.Arn

  # Cross-account role for EventBridge to invoke Lambda functions
  EventBridgeCrossAccountRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "Explicit Name is required for organizational governance and cross-stack references"
          - id: W11
            reason: "EventBridge cross-account role requires wildcard region access for Lambda functions in security tooling account"
    Properties:
      RoleName: AMILineage-EventBridge-CrossAccount-Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub "arn:aws:lambda:*:${SecurityToolingAccountId}:function:ami-event-processor"
                  - !Sub "arn:aws:lambda:*:${SecurityToolingAccountId}:function:ami-compliance-evaluator"

  # Resource policy for the custom event bus
  AMILineageEventBusPolicy:
    Type: AWS::Events::EventBusPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "EventBridge policy requires wildcard principal (*) to allow all organization accounts to publish events to the custom event bus"
    Properties:
      EventBusName: !Ref AMILineageEventBus
      StatementId: AllowOrganizationAccounts
      Statement:
        Effect: Allow
        Principal: "*"
        Action:
          - events:PutEvents
        Resource: !GetAtt AMILineageEventBus.Arn

Outputs:
  EventBusArn:
    Description: ARN of the AMI lineage event bus
    Value: !GetAtt AMILineageEventBus.Arn
    Export:
      Name: !Sub "${AWS::StackName}-EventBusArn"

  EventBusName:
    Description: Name of the AMI lineage event bus
    Value: !Ref AMILineageEventBus
    Export:
      Name: !Sub "${AWS::StackName}-EventBusName"

  CrossAccountRoleArn:
    Description: ARN of the cross-account role for EventBridge
    Value: !GetAtt EventBridgeCrossAccountRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-CrossAccountRoleArn"
